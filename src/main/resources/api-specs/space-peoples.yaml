openapi: 3.0.2
info:
  title: space-peoples
  version: 1.0.0
  contact:
    name: Thomas Neeb
    email: thomas.neeb@nttdata.com
paths:
  /registration:
    post:
      operationId: createAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
      responses:
        '200':
          description: Returns the new generated client credentials
          headers:
            Location:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBody'
  /token:
    post:
      operationId: token
      responses:
        '200':
          description: Returns the access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBody'
  /my:
    get:
      operationId: retrieveAccount
      responses:
        '200':
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/Agent'
           description: Returns the agent info for the logged in user
  /my/planets:
    get:
      operationId: retrieveMyPlanets
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Planet'
          description: Returns the list of all owned planets
  /my/planets/{planetId}:
    parameters:
      -
        name: planetId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: retrieveMyPlanetDetails
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanetDetails'
          description: Returns the detailed information of one own planet
  /my/planets/{planetId}/buildings:
    parameters:
      -
        name: planetId
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: retrievePlanetBuildings
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Building'
          description: Returns all buildings on this planet
    post:
      operationId: createBuilding
      requestBody:
        content:
          application/json:
            schema:
              properties:
                buildingType:
                  $ref: '#/components/schemas/BuildingType'
      responses:
        '201':
          description: Triggered creation of a new building
  /my/planets/{planetId}/buildings/{buildingType}:
    parameters:
      -
        name: planetId
        in: path
        required: true
        schema:
          type: string
      -
        name: buildingType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BuildingType'
    get:
      operationId: retrieveBuilding
      responses:
        '200':
          description: Returns the requested building on that planet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
    post:
      operationId: levelUpBuilding
      responses:
        '201':
          description: Level up confirmed
  /my/ships:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ship'
          description: Returns all owned ships
  /my/researchs:
    get:
      operationId: retrieveResearchLevels
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResearchLevel'
          description: Returns the actual research level of all ship components
    post:
      operationId: startShipPartResearch
      requestBody:
        content:
          application/json:
            schema:
              properties:
                planetId:
                  type: string
                shipPart:
                  $ref: '#/components/schemas/ShipPartType'
      responses:
        '201':
          description: Research command accepted
  /my/researchs/{shipPartType}:
    parameters:
      -
        name: shipPartType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ShipPartType'
    post:
      operationId: levelUpShipPartResearch
      requestBody:
        content:
          application/json:
            schema:
              properties:
                planetId:
                  type: string
      responses:
        '201':
          description: Research command accepted
  /my/ship-types:
    get:
      operationId: retrieveShipTypes
      responses:
        '200':
          description: retrieve all ship types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipType'
    post:
      operationId: createShipType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipType'
      responses:
        '200':
          description: creates a new ship type with the given components
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipType'
  /galaxies:
    get:
      operationId: retrieveGalaxies
      responses:
        '200':
          description: List all galaxies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Galaxy'
  /galaxies/{universeName}/planets:
    get:
      operationId: retrievePlanets
      responses:
        '200':
          description: List all planets of this galaxy
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Planet'
    parameters:
      -
        name: universeName
        in: path
        schema:
          type: string
        required: true
  /building-types:
    get:
      operationId: retrieveBuildingTypes
      responses:
        '200':
          description: Returns all available building types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuildingType'
  /admin/galaxies:
    post:
      operationId: createGalaxy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Galaxy'
      responses:
        '201':
          description: Generation process started
components:
  schemas:
    Galaxy:
      required:
        - nickname
      properties:
        nickname:
          $ref: '#/components/schemas/Nickname'
    RegistrationRequest:
      required:
        - nickname
        - password
      properties:
        nickname:
          $ref: '#/components/schemas/Nickname'
        password:
          type: string
        email:
          type: string
    TokenBody:
      required:
        - access_token
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        expires:
          type: integer
        token:
          type: string
        scope:
          type: string
    Agent:
      required:
        - nickname
      properties:
        nickname:
          $ref: '#/components/schemas/Nickname'
    Nickname:
      type: string
      minimum: 4
      maximum: 80
    PlanetDetails:
      required:
        - planet
        - buildings
        - resources
      properties:
        planet:
          $ref: '#/components/schemas/Planet'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceLevel'
        buildings:
          type: array
          items:
            $ref: '#/components/schemas/Building'
    Planet:
      required:
        - id
        - coordinates
        - nickname
      properties:
        id:
          type: string
        coordinates:
          $ref: '#/components/schemas/GalacticPosition'
        planetName:
          $ref: '#/components/schemas/Nickname'
        galaxyName:
          $ref: '#/components/schemas/Nickname'
    GalacticPosition:
      required:
        - x
        - y
        - z
        - orbit
      properties:
        x:
          type: integer
          minimum: 1
          maximum: 9
        y:
          type: integer
          minimum: 1
          maximum: 9
        z:
          type: integer
          minimum: 1
          maximum: 9
        orbit:
          type: string
          minimum: 1
          maximum: 1
    Building:
      properties:
        buildingType:
          $ref: '#/components/schemas/BuildingType'
        level:
          type: integer
        nextLevelUpdate:
          type: string
          format: date-time
    ResourceLevel:
      required:
        - resourceType
        - units
      properties:
        resourceType:
          $ref: '#/components/schemas/ResourceType'
        units:
          type: integer
    Ship:
      properties:
        nickname:
          $ref: '#/components/schemas/Nickname'
    ShipType:
      properties:
        nickname:
          $ref: '#/components/schemas/Nickname'
        equipments:
          type: array
          items:
            $ref: '#/components/schemas/ShipPartLevel'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceLevel'
        stability:
          type: integer
        fuel:
          type: integer
        attack:
          type: integer
        armour:
          type: integer
        hydrogenConsumptionPerHour:
          type: integer
        acceleration:
          type: integer
        cargo:
          type: integer
    ShipPartLevel:
      required:
        - shipPart
      properties:
        shipPart:
          $ref: '#/components/schemas/ShipPartType'
        level:
          type: integer
    ResearchLevel:
      properties:
        shipPart:
          $ref: '#/components/schemas/ShipPartType'
        level:
          type: integer
        planetId:
          type: string
        nextLevelUpdate:
          type: string
          format: date-time
    BuildingType:
      type: string
      enum:
        - BUILDING_YARD
        - SPACEPORT
        - RESIDENTIAL_BUILDING
        - SOLAR_PARK
        - IRON_MINE
        - CARBON_MINE
        - SILICON_MINE
        - FOUNTAIN
        - ELECTROLYSIS_PLANT
        - WAREHOUSE
        - SPACESHIP_FACTORY
        - SPACESHIP_RESEARCH_FACILITY
    ShipPartType:
      type: string
      enum:
        - BASIC_UNIT
        - LASER
        - INVASION_UNIT
        - COLONISATION_UNIT
        - CARGO_MODULE
        - FUEL_TANK
        - BOUNTY_UNIT
        - ENGINE
        - MINERAL_PROCESSOR
        - SCANNER
        - SHIELD
        - ARMOUR
    ResourceType:
      type: string
      enum:
        - SILICON
        - IRON
        - CARBON
        - WATER
        - HYDROGEN
        - OXYGEN
        - SAND
        - DIAMONDS
        - SILVER
        - GOLD